<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>剑轩博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Ethan-jx.github.io/"/>
  <updated>2019-03-27T06:15:49.075Z</updated>
  <id>https://Ethan-jx.github.io/</id>
  
  <author>
    <name>剑轩</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用Proxifier实现所有程序使用代理</title>
    <link href="https://Ethan-jx.github.io/2018/2018-10-14-%E5%88%A9%E7%94%A8Proxifier%E5%AE%9E%E7%8E%B0%E6%89%80%E6%9C%89%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/"/>
    <id>https://Ethan-jx.github.io/2018/2018-10-14-利用Proxifier实现所有程序使用代理/</id>
    <published>2018-10-14T07:44:32.000Z</published>
    <updated>2019-03-27T06:15:49.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天分享一个可以设置电脑系统全局代理的软件：<strong>Proxifier</strong> ，为什么要分享这个软件呢？因为当我繁琐的搞定了 Xshell 配置各台内网服务器的代理、Navicat 配置内网数据库连接 、 将 Java 代码添加 JVM 参数代理时（具体原因可以查看 <a href="https://ethan-jx.github.io/2018/2018-10-13-Java程序设置代理服务器/">Java程序设置代理服务器</a>），公司的一位小哥哥分享了一个非常🐮的一个软件，即 <strong>Proxifier</strong> 。它可以将我前面所做的工作都省略掉（我的内心是崩溃的，我又把原来配置的那些东西删了😭）。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载地址：<a href="https://www.proxifier.com/" target="_blank" rel="noopener">https://www.proxifier.com/</a></p><p>从官网上发现存在多个版本，其中便携版是不需要安装，直接双击运行，安装版则直接安装即可</p><p>注册码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GKZ4Q-R2XYK-6FHWM-EVQVD-RKFJK</span><br><span class="line">89Z4L-W3HHW-6WAYE-2XMHM-DHYBQ</span><br><span class="line">SDZ2Y-NY3RK-YKT32-P8AEK-GYEJF</span><br><span class="line">KEZSE-92N5C-VR3WV-PSVQT-DMC7G</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>自行百度。</p><blockquote><p>提示：打开软件，按 <code>F1</code> 可打开帮助文档！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天分享一个可以设置电脑系统全局代理的软件：&lt;strong&gt;Proxifier&lt;/strong&gt; ，为什么要分享这个软件呢？因为当我繁琐的搞定了 Xshell 配置各台内网服务器的代理、Navicat 配置内网数据库连接 、 将 Java 代码添加 JVM 参数代理时（具体原因可以查看 &lt;a href=&quot;https://ethan-jx.github.io/2018/2018-10-13-Java程序设置代理服务器/&quot;&gt;Java程序设置代理服务器&lt;/a&gt;），公司的一位小哥哥分享了一个非常🐮的一个软件，即 &lt;strong&gt;Proxifier&lt;/strong&gt; 。它可以将我前面所做的工作都省略掉（我的内心是崩溃的，我又把原来配置的那些东西删了😭）。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;下载地址：&lt;a href=&quot;https://www.proxifier.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.proxifier.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从官网上发现存在多个版本，其中便携版是不需要安装，直接双击运行，安装版则直接安装即可&lt;/p&gt;
&lt;p&gt;注册码：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GKZ4Q-R2XYK-6FHWM-EVQVD-RKFJK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89Z4L-W3HHW-6WAYE-2XMHM-DHYBQ&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SDZ2Y-NY3RK-YKT32-P8AEK-GYEJF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KEZSE-92N5C-VR3WV-PSVQT-DMC7G&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="软件" scheme="https://Ethan-jx.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="代理" scheme="https://Ethan-jx.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="Socks" scheme="https://Ethan-jx.github.io/tags/Socks/"/>
    
      <category term="软件" scheme="https://Ethan-jx.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Java程序设置代理服务器</title>
    <link href="https://Ethan-jx.github.io/2018/2018-10-13-Java%E7%A8%8B%E5%BA%8F%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://Ethan-jx.github.io/2018/2018-10-13-Java程序设置代理服务器/</id>
    <published>2018-10-13T08:36:45.000Z</published>
    <updated>2019-03-27T06:15:49.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前两天公司搬到新的办公楼上班，但由于网络没有打通，只能通过设置跳板机 SSH 隧道的动态代理来访问原来的内网环境，之前已经写过一篇<a href="https://ethan-jx.github.io/2018/2018-09-01-SSH端口转发总结/">SSH端口转发总结</a>，通过之前的文章，就可以解决访问原内网中的浏览器资源问题，但是还有一个问题：开发过程中的程序中数据库等资源依旧无法访问，本文记录了 Java 程序如何使用代理去请求其他服务。</p><h2 id="查看-IP-地址的API"><a href="#查看-IP-地址的API" class="headerlink" title="查看 IP 地址的API"></a>查看 IP 地址的API</h2><ol><li><a href="https://ip.sb/" target="_blank" rel="noopener">https://ip.sb/</a></li><li><a href="http://myip.ipip.net/" target="_blank" rel="noopener">http://myip.ipip.net/</a></li><li><a href="https://www.ip.la/" target="_blank" rel="noopener">https://www.ip.la/</a></li><li><a href="https://www.ipip.net/" target="_blank" rel="noopener">https://www.ipip.net/</a></li></ol><h2 id="Java代码使用代理"><a href="#Java代码使用代理" class="headerlink" title="Java代码使用代理"></a>Java代码使用代理</h2><p>目前在我的了解范围内，我知道有两种方式实现 Java 代码使用代理（所以我不敢说只有两种方式😅），分别是：程序中设置代理、设置 JVM 启动参数。在这些方式中，我推荐使用设置 JVM 启动参数这种方式，因为它对原代码没有侵入任何内容。</p><a id="more"></a><h3 id="程序中设置代理"><a href="#程序中设置代理" class="headerlink" title="程序中设置代理"></a>程序中设置代理</h3><p>java中支持 HTTP代理、HTTPS代理、Socks代理、FTP代理、本地 IE 代理等。</p><p>通过<code>System.setProperty(key , value)</code>进行设置。</p><h4 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h4><p>HTTP设置代理的参数如下：</p><ol><li><code>http.proxyHost</code></li><li><code>http.proxyPort</code></li><li><code>http.nonProxyHosts</code>  设置不走代理服务器访问的主机，可以使用*通配符，多个地址用|分隔</li></ol><p>测试代码：</p><figure class="highlight java"><figcaption><span>HttpProxyTest</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpProxyTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.setProperty(<span class="string">"http.proxyHost"</span>, <span class="string">"127.0.0.1"</span>);</span><br><span class="line">System.setProperty(<span class="string">"http.proxyPort"</span>, <span class="string">"1080"</span>);</span><br><span class="line"><span class="comment">// 设置不走代理服务器访问的主机，可以使用*通配符，多个地址用|分隔</span></span><br><span class="line">System.setProperty(<span class="string">"http.nonProxyHosts"</span>, <span class="string">"pv.sohu.com"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个url实例</span></span><br><span class="line"><span class="comment">// http://pv.sohu.com/cityjson?ie=utf-8 该网站是一个获取ip的api</span></span><br><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"http://pv.sohu.com/cityjson?ie=utf-8"</span>);</span><br><span class="line"><span class="comment">// 通过url的openStream获取url对象所表示资源的字节输入流</span></span><br><span class="line">InputStream is = url.openStream();</span><br><span class="line"><span class="comment">// 将字节输入流转换为字符输入流</span></span><br><span class="line">InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(is, <span class="string">"utf-8"</span>);</span><br><span class="line"><span class="comment">// 为字符输入流添加缓冲</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">String line;</span><br><span class="line"><span class="comment">// 读取数据</span></span><br><span class="line"><span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">stringBuffer.append(line);</span><br><span class="line">&#125;</span><br><span class="line">br.close();</span><br><span class="line">isr.close();</span><br><span class="line">is.close();</span><br><span class="line">System.out.println(stringBuffer.toString());</span><br><span class="line">&#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h4><p>HTTPS设置代理的参数如下：</p><ol><li><code>https.proxyHost</code></li><li><code>https.proxyPort</code></li></ol><blockquote><p><strong>注意</strong>：它没有https.nonProxyHosts属性，它按照http.nonProxyHosts中设置的规则访问</p></blockquote><p>测试代码：</p><figure class="highlight java"><figcaption><span>HttpsProxyTest</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpsProxyTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.setProperty(<span class="string">"https.proxyHost"</span>, <span class="string">"127.0.0.1"</span>);</span><br><span class="line">System.setProperty(<span class="string">"https.proxyPort"</span>, <span class="string">"1080"</span>);</span><br><span class="line"><span class="comment">// 经过验证，https 没有https.nonProxyHosts属性，但是http.nonProxyHosts，对其生效</span></span><br><span class="line">System.setProperty(<span class="string">"https.nonProxyHosts"</span>, <span class="string">"ipv4.ip.sb"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个url实例</span></span><br><span class="line"><span class="comment">// https://ip.sb/ 该网站是一个获取ip的api</span></span><br><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"https://ipv4.ip.sb/addrinfo.php?callback=callback"</span>);</span><br><span class="line"><span class="comment">// 通过url的openStream获取url对象所表示资源的字节输入流</span></span><br><span class="line">InputStream is = url.openStream();</span><br><span class="line"><span class="comment">// 将字节输入流转换为字符输入流</span></span><br><span class="line">InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(is, <span class="string">"utf-8"</span>);</span><br><span class="line"><span class="comment">// 为字符输入流添加缓冲</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">String line;</span><br><span class="line"><span class="comment">// 读取数据</span></span><br><span class="line"><span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">stringBuffer.append(line);</span><br><span class="line">&#125;</span><br><span class="line">br.close();</span><br><span class="line">isr.close();</span><br><span class="line">is.close();</span><br><span class="line">System.out.println(stringBuffer.toString());</span><br><span class="line">&#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h4><p>FTP设置代理参数如下：</p><ol><li><code>ftp.proxyHost</code></li><li><code>ftp.proxyPort</code></li><li><code>ftp.nonProxyHosts</code></li></ol><p>由于没有真正的FTP代理测试环境，因此没有代码😅。</p><h4 id="Socks"><a href="#Socks" class="headerlink" title="Socks"></a>Socks</h4><p>Socks 代理是最强大的，它能实现以上所有代理。数据库的JDBC内网连接就是通过 Socks 代理实现。</p><p>Socks设置代理参数如下：</p><ol><li><code>socksProxyHost</code></li><li><code>socksProxyPort</code></li></ol><p>测试代码：</p><figure class="highlight java"><figcaption><span>SocksProxyTest</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocksProxyTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.setProperty(<span class="string">"socksProxyHost"</span>, <span class="string">"127.0.0.1"</span>);</span><br><span class="line">System.setProperty(<span class="string">"socksProxyPort"</span>, <span class="string">"1080"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个url实例</span></span><br><span class="line"><span class="comment">// http://pv.sohu.com/cityjson?ie=utf-8 该网站是一个获取ip的api</span></span><br><span class="line"><span class="comment">//URL url = new URL("http://pv.sohu.com/cityjson?ie=utf-8");</span></span><br><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"https://ipv4.ip.sb/addrinfo.php?callback=callback"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过url的openStream获取url对象所表示资源的字节输入流</span></span><br><span class="line">InputStream is = url.openStream();</span><br><span class="line"><span class="comment">// 将字节输入流转换为字符输入流</span></span><br><span class="line">InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(is, <span class="string">"utf-8"</span>);</span><br><span class="line"><span class="comment">// 为字符输入流添加缓冲</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">String line;</span><br><span class="line"><span class="comment">// 读取数据</span></span><br><span class="line"><span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">stringBuffer.append(line);</span><br><span class="line">&#125;</span><br><span class="line">br.close();</span><br><span class="line">isr.close();</span><br><span class="line">is.close();</span><br><span class="line">System.out.println(stringBuffer.toString());</span><br><span class="line">&#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="本地-IE-代理"><a href="#本地-IE-代理" class="headerlink" title="本地 IE 代理"></a>本地 IE 代理</h4><p>本地 IE 代理设置代理参数如下：</p><ol><li><code>java.net.useSystemProxies</code></li></ol><p>测试代码：（通过设置本地可以查看效果）</p><figure class="highlight java"><figcaption><span>SystemProxy</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemProxy</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.setProperty(<span class="string">"java.net.useSystemProxies"</span>, <span class="string">"true"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个url实例</span></span><br><span class="line"><span class="comment">// http://pv.sohu.com/cityjson?ie=utf-8 该网站是一个获取ip的api</span></span><br><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"http://pv.sohu.com/cityjson?ie=utf-8"</span>);</span><br><span class="line"><span class="comment">// 通过url的openStream获取url对象所表示资源的字节输入流</span></span><br><span class="line">InputStream is = url.openStream();</span><br><span class="line"><span class="comment">// 将字节输入流转换为字符输入流</span></span><br><span class="line">InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(is, <span class="string">"utf-8"</span>);</span><br><span class="line"><span class="comment">// 为字符输入流添加缓冲</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">String line = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 读取数据</span></span><br><span class="line"><span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">stringBuffer.append(line);</span><br><span class="line">&#125;</span><br><span class="line">br.close();</span><br><span class="line">isr.close();</span><br><span class="line">is.close();</span><br><span class="line">System.out.println(stringBuffer.toString());</span><br><span class="line">&#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java启动参数设置代理"><a href="#Java启动参数设置代理" class="headerlink" title="Java启动参数设置代理"></a>Java启动参数设置代理</h3><p>Java可以通过设置以下命令来实现<code>System.setProperty(key , value)</code>这行代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-D&lt;key&gt;=&lt;value&gt;</span><br></pre></td></tr></table></figure><h3 id="HTTP-1"><a href="#HTTP-1" class="headerlink" title="HTTP"></a>HTTP</h3><ol><li><code>-Dhttp.proxyHost</code></li><li><code>-Dhttp.proxyPort</code></li><li><code>-Dhttp.nonProxyHosts</code></li></ol><h3 id="HTTPS-1"><a href="#HTTPS-1" class="headerlink" title="HTTPS"></a>HTTPS</h3><ol><li><code>-Dhttps.proxyHost</code></li><li><code>-Dhttps.proxyPort</code></li></ol><h3 id="FTP-1"><a href="#FTP-1" class="headerlink" title="FTP"></a>FTP</h3><ol><li><code>-Dftp.proxyHost</code></li><li><code>-Dftp.proxyPort</code></li><li><code>-Dftp.nonProxyHosts</code></li></ol><h3 id="Socks-1"><a href="#Socks-1" class="headerlink" title="Socks"></a>Socks</h3><ol><li><code>-DsocksProxyHost</code></li><li><code>-DsocksProxyPort</code></li></ol><h3 id="本地代理"><a href="#本地代理" class="headerlink" title="本地代理"></a>本地代理</h3><ol><li><code>-Djava.net.useSystemProxies</code></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前两天公司搬到新的办公楼上班，但由于网络没有打通，只能通过设置跳板机 SSH 隧道的动态代理来访问原来的内网环境，之前已经写过一篇&lt;a href=&quot;https://ethan-jx.github.io/2018/2018-09-01-SSH端口转发总结/&quot;&gt;SSH端口转发总结&lt;/a&gt;，通过之前的文章，就可以解决访问原内网中的浏览器资源问题，但是还有一个问题：开发过程中的程序中数据库等资源依旧无法访问，本文记录了 Java 程序如何使用代理去请求其他服务。&lt;/p&gt;
&lt;h2 id=&quot;查看-IP-地址的API&quot;&gt;&lt;a href=&quot;#查看-IP-地址的API&quot; class=&quot;headerlink&quot; title=&quot;查看 IP 地址的API&quot;&gt;&lt;/a&gt;查看 IP 地址的API&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://ip.sb/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ip.sb/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://myip.ipip.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://myip.ipip.net/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ip.la/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ip.la/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ipip.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ipip.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Java代码使用代理&quot;&gt;&lt;a href=&quot;#Java代码使用代理&quot; class=&quot;headerlink&quot; title=&quot;Java代码使用代理&quot;&gt;&lt;/a&gt;Java代码使用代理&lt;/h2&gt;&lt;p&gt;目前在我的了解范围内，我知道有两种方式实现 Java 代码使用代理（所以我不敢说只有两种方式😅），分别是：程序中设置代理、设置 JVM 启动参数。在这些方式中，我推荐使用设置 JVM 启动参数这种方式，因为它对原代码没有侵入任何内容。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://Ethan-jx.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://Ethan-jx.github.io/tags/Java/"/>
    
      <category term="代理" scheme="https://Ethan-jx.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="Socks" scheme="https://Ethan-jx.github.io/tags/Socks/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA常用快捷键总结</title>
    <link href="https://Ethan-jx.github.io/2018/2018-09-22-IntelliJ%20IDEA%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%80%BB%E7%BB%93/"/>
    <id>https://Ethan-jx.github.io/2018/2018-09-22-IntelliJ IDEA常用快捷键总结/</id>
    <published>2018-09-22T07:15:21.000Z</published>
    <updated>2019-03-27T06:15:49.075Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录了 <code>IntelliJ IDEA</code> 在使用过程中常用的命令。</p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">快捷键</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Basic</td><td style="text-align:center">Alt + /</td><td style="text-align:center">提示补全【冲突，已修改】</td></tr><tr><td style="text-align:center">SmartType</td><td style="text-align:center">Ctrl + Shift + Space</td><td style="text-align:center">在列出的可选项中只显示出你所输入的关键字最相关的信息</td></tr><tr><td style="text-align:center">Class Name Completion</td><td style="text-align:center">Ctrl + Alt + space</td><td style="text-align:center">类名提示补全</td></tr><tr><td style="text-align:center">Show Intention Actions</td><td style="text-align:center">Alt + Enter</td><td style="text-align:center">万能解错/生成返回值变量</td></tr><tr><td style="text-align:center">Complete statement</td><td style="text-align:center">Ctrl + Shift + Enter</td><td style="text-align:center">代码补全后，自动在代码末尾添加分号结束符</td></tr><tr><td style="text-align:center">Insert Live Template..</td><td style="text-align:center">Ctrl + J</td><td style="text-align:center">插入模板代码</td></tr></tbody></table><a id="more"></a><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">快捷键</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Serach Everywhere</td><td style="text-align:center">double Shift</td><td style="text-align:center">弹出 <code>Search Everywhere</code> 弹出层</td></tr><tr><td style="text-align:center">Find Action</td><td style="text-align:center">Ctrl + Shift + A</td><td style="text-align:center">发号施令，可以在窗口输入命令直接执行</td></tr><tr><td style="text-align:center">Next Highlighted Error</td><td style="text-align:center">F2</td><td style="text-align:center">快速搜索类中的错误、警告</td></tr><tr><td style="text-align:center">Previous Highlighted Error</td><td style="text-align:center">Shift + F2</td><td style="text-align:center">向上快速搜索类中的错误、警告</td></tr><tr><td style="text-align:center">Class..</td><td style="text-align:center">Ctrl + N</td><td style="text-align:center">查找类</td></tr><tr><td style="text-align:center">File..</td><td style="text-align:center">Ctrl + Shift + N</td><td style="text-align:center">查找文件</td></tr><tr><td style="text-align:center">Symbol..</td><td style="text-align:center">Ctrl + Shift + Alt + N</td><td style="text-align:center">查找类中的方法或变量</td></tr></tbody></table><h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">快捷键</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Comment with Line Comment</td><td style="text-align:center">Ctrl + /</td><td style="text-align:center">单行注释，即：//…</td></tr><tr><td style="text-align:center">Comment with Block Comment</td><td style="text-align:center">Ctrl + Shift + /</td><td style="text-align:center">多行注释注释，即：/<em>…</em>/</td></tr><tr><td style="text-align:center">Duplicate Lines</td><td style="text-align:center">Ctrl + D</td><td style="text-align:center">向下复制一行</td></tr><tr><td style="text-align:center">Delete Line</td><td style="text-align:center">Ctrl + Y</td><td style="text-align:center">删除一行或选中行</td></tr><tr><td style="text-align:center">Move Statement Down</td><td style="text-align:center">Ctrl + Shift + ↑</td><td style="text-align:center">向下移动行</td></tr><tr><td style="text-align:center">Move Statement Up</td><td style="text-align:center">Ctrl + Shift + ↓</td><td style="text-align:center">向上移动行</td></tr><tr><td style="text-align:center">Smart line split</td><td style="text-align:center">Ctrl + Enter</td><td style="text-align:center">新增一行,原来所在的光标不变</td></tr><tr><td style="text-align:center">Start New Line</td><td style="text-align:center">Shift + Enter</td><td style="text-align:center">新增一行,光标处于新加的空行上</td></tr><tr><td style="text-align:center">Start New Line Before Current</td><td style="text-align:center">Ctrl + Alt + Enter</td><td style="text-align:center">向上新增一行</td></tr><tr><td style="text-align:center">Toggle Case</td><td style="text-align:center">Ctrl + Shift + U</td><td style="text-align:center">大写转小写/小写转大写</td></tr><tr><td style="text-align:center">Reformat Code</td><td style="text-align:center">Ctrl + Alt + L</td><td style="text-align:center">格式化代码</td></tr><tr><td style="text-align:center">Undo</td><td style="text-align:center">Ctrl + Z</td><td style="text-align:center">撤销</td></tr><tr><td style="text-align:center">Redo</td><td style="text-align:center">Ctrl + Shift+ Z</td><td style="text-align:center">反撤销</td></tr><tr><td style="text-align:center">Close</td><td style="text-align:center">Ctrl + F4</td><td style="text-align:center">关闭当前打开的编辑标签页</td></tr><tr><td style="text-align:center">Close all</td><td style="text-align:center">【默认没有】</td><td style="text-align:center">关闭所有打开的编辑标签页</td></tr><tr><td style="text-align:center">Generate</td><td style="text-align:center">Alt + Insert</td><td style="text-align:center">生成构造器/get/set/toString</td></tr><tr><td style="text-align:center">Surround With</td><td style="text-align:center">Ctrl + Alt + T</td><td style="text-align:center">生成(if..else,try..catch, for, synchronized, etc.) 等等</td></tr><tr><td style="text-align:center">Select successively increasing code blocks</td><td style="text-align:center">Ctrl + W</td><td style="text-align:center">选中当前光标所在的代码块，多次触发，代码块会逐级变大</td></tr><tr><td style="text-align:center">Decrease current selection to previous state</td><td style="text-align:center">Ctrl + Shift + W</td><td style="text-align:center">是 Ctrl + W 的反向操作，多次触发，代码块会逐级变小，最小变为光标</td></tr><tr><td style="text-align:center">Optimize imports</td><td style="text-align:center">Ctrl + Alt + O</td><td style="text-align:center">去除没有实际用到的包</td></tr></tbody></table><h2 id="页面切换"><a href="#页面切换" class="headerlink" title="页面切换"></a>页面切换</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">快捷键</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Go to line</td><td style="text-align:center">Ctrl + G</td><td style="text-align:center">跳转至某一行代码</td></tr><tr><td style="text-align:center">Back</td><td style="text-align:center">Ctrl + Alt + ←</td><td style="text-align:center">退回到前一个编辑的页面</td></tr><tr><td style="text-align:center">Forward</td><td style="text-align:center">Ctrl + Alt + →</td><td style="text-align:center">进入到下一个编辑的页面(针对于上条)</td></tr><tr><td style="text-align:center">Recently Files</td><td style="text-align:center">Ctrl + E</td><td style="text-align:center">打开最近打开的文件</td></tr><tr><td style="text-align:center">Recent Changes</td><td style="text-align:center">Alt + Shift + C</td><td style="text-align:center">最近更改的代码</td></tr><tr><td style="text-align:center">Recently Changed Files</td><td style="text-align:center">Ctrl + Shift+ E</td><td style="text-align:center">打开最近修改的文件</td></tr><tr><td style="text-align:center">Show In Explorer</td><td style="text-align:center">【默认没有】</td><td style="text-align:center">打开代码所在硬盘文件夹</td></tr></tbody></table><h2 id="类信息查看"><a href="#类信息查看" class="headerlink" title="类信息查看"></a>类信息查看</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">快捷键</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Type Hierarchy</td><td style="text-align:center">Ctrl + H</td><td style="text-align:center">查看继承关系</td></tr><tr><td style="text-align:center">Parameter Info</td><td style="text-align:center">Ctrl + P</td><td style="text-align:center">方法参数提示显示</td></tr><tr><td style="text-align:center">Structure</td><td style="text-align:center">Alt + 7</td><td style="text-align:center">查看类的结构：类似于 eclipse 的 outline</td></tr><tr><td style="text-align:center">Quick Documentation</td><td style="text-align:center">Ctrl + Q</td><td style="text-align:center">查看文档说明</td></tr><tr><td style="text-align:center">Call Hierarchy</td><td style="text-align:center">Ctrl + Alt + H</td><td style="text-align:center">查找方法在哪里被调用</td></tr><tr><td style="text-align:center">Method Hierarchy</td><td style="text-align:center">Ctrl + Shift + H</td><td style="text-align:center">查看方法的多层重写结构</td></tr><tr><td style="text-align:center">Collapse</td><td style="text-align:center">Ctrl + <code>-</code></td><td style="text-align:center">收起的方法</td></tr><tr><td style="text-align:center">Expand</td><td style="text-align:center">Ctrl + <code>+</code></td><td style="text-align:center">打开方法</td></tr><tr><td style="text-align:center">Collapse all</td><td style="text-align:center">Ctrl + Shift + <code>-</code></td><td style="text-align:center">收起所有的方法</td></tr><tr><td style="text-align:center">Expand all</td><td style="text-align:center">Ctrl + Shift + <code>+</code></td><td style="text-align:center">打开所有方法</td></tr><tr><td style="text-align:center">Show UML Diagram</td><td style="text-align:center">Ctrl + Alt + Shift + U</td><td style="text-align:center">查看类的继承结构图</td></tr><tr><td style="text-align:center">Override methods</td><td style="text-align:center">Ctrl + O</td><td style="text-align:center">展示该类中所有覆盖或者实现的方法列表，重写</td></tr><tr><td style="text-align:center">File Structure</td><td style="text-align:center">Ctrl＋F12</td><td style="text-align:center">显示当前文件的结构</td></tr></tbody></table><h2 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">快捷键</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Refactor This…</td><td style="text-align:center">Ctrl + Shift + Alt + T</td><td style="text-align:center">展示重构相关的快捷键</td></tr><tr><td style="text-align:center">Rename</td><td style="text-align:center">Shift + F6</td><td style="text-align:center">重构：修改变量名与方法名</td></tr><tr><td style="text-align:center">Introduce Field</td><td style="text-align:center">Ctrl + Alt + F</td><td style="text-align:center">局部变量抽取为成员变量</td></tr><tr><td style="text-align:center">Extract Method</td><td style="text-align:center">Ctrl + Alt + M</td><td style="text-align:center">抽取方法</td></tr></tbody></table><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">快捷键</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Add To Favorites</td><td style="text-align:center">Alt + Shift + F</td><td style="text-align:center">添加到收藏</td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://wiki.jikexueyuan.com/project/intellij-idea-tutorial/keymap-introduce.html" target="_blank" rel="noopener">快捷键 - IntelliJ IDEA 使用教程 - 极客学院Wiki</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录了 &lt;code&gt;IntelliJ IDEA&lt;/code&gt; 在使用过程中常用的命令。&lt;/p&gt;
&lt;h2 id=&quot;提示&quot;&gt;&lt;a href=&quot;#提示&quot; class=&quot;headerlink&quot; title=&quot;提示&quot;&gt;&lt;/a&gt;提示&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;名称&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;快捷键&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Basic&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Alt + /&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;提示补全【冲突，已修改】&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;SmartType&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Ctrl + Shift + Space&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;在列出的可选项中只显示出你所输入的关键字最相关的信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Class Name Completion&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Ctrl + Alt + space&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;类名提示补全&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Show Intention Actions&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Alt + Enter&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;万能解错/生成返回值变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Complete statement&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Ctrl + Shift + Enter&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代码补全后，自动在代码末尾添加分号结束符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Insert Live Template..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Ctrl + J&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;插入模板代码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="IDEA" scheme="https://Ethan-jx.github.io/categories/IDEA/"/>
    
    
      <category term="IDEA" scheme="https://Ethan-jx.github.io/tags/IDEA/"/>
    
      <category term="快捷键" scheme="https://Ethan-jx.github.io/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>常用Git命令总结</title>
    <link href="https://Ethan-jx.github.io/2018/2018-09-08-%E5%B8%B8%E7%94%A8Git%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>https://Ethan-jx.github.io/2018/2018-09-08-常用Git命令总结/</id>
    <published>2018-09-08T13:00:24.000Z</published>
    <updated>2019-03-27T06:15:49.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文记录一些在开发上常用的Git命令。</p><h2 id="git查看命令帮助文档"><a href="#git查看命令帮助文档" class="headerlink" title="git查看命令帮助文档"></a>git查看命令帮助文档</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">help</span> [命令]</span><br></pre></td></tr></table></figure><h2 id="本地库初始化"><a href="#本地库初始化" class="headerlink" title="本地库初始化"></a>本地库初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在本目录下创建一个Git仓库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 创建一个目录，并将它初始化成Git代码库</span></span><br><span class="line">git init [project-name]</span><br></pre></td></tr></table></figure><p>执行该命令后会在当前文件夹内生成一个.git 目录。</p><p><strong>注意</strong>：.git 目录中存放的是本地库相关的子目录和文件，不要删除，也不要胡乱修改。</p><h2 id="设置签名信息"><a href="#设置签名信息" class="headerlink" title="设置签名信息"></a>设置签名信息</h2><h3 id="项目-仓库级别签名"><a href="#项目-仓库级别签名" class="headerlink" title="项目/仓库级别签名"></a>项目/仓库级别签名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name user_name</span><br><span class="line">git config user.email user_email</span><br></pre></td></tr></table></figure><a id="more"></a><p>信息保存位置：./.git/config 文件。</p><h3 id="系统用户级别签名"><a href="#系统用户级别签名" class="headerlink" title="系统用户级别签名"></a>系统用户级别签名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name user_name</span><br><span class="line">git config --global user.email user_email</span><br></pre></td></tr></table></figure><p>信息保存位置：~/.gitconfig 文件。</p><h2 id="查看工作区、暂存区状态"><a href="#查看工作区、暂存区状态" class="headerlink" title="查看工作区、暂存区状态"></a>查看工作区、暂存区状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h2 id="将工作区的“新建-修改”添加到暂存区"><a href="#将工作区的“新建-修改”添加到暂存区" class="headerlink" title="将工作区的“新建/修改”添加到暂存区"></a>将工作区的“新建/修改”添加到暂存区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">git add [file name]</span><br><span class="line"><span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line">git add [dir]</span><br><span class="line"><span class="comment"># 添加当前目录的所有文件到暂存区</span></span><br><span class="line">git add .</span><br></pre></td></tr></table></figure><h2 id="将暂存区的内容提交到本地库"><a href="#将暂存区的内容提交到本地库" class="headerlink" title="将暂存区的内容提交到本地库"></a>将暂存区的内容提交到本地库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将暂存区的内容提交到本地库</span></span><br><span class="line">git commit -m <span class="string">"commit message"</span> [file name]</span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">git commit --amend -m [message]</span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">git commit --amend ...</span><br></pre></td></tr></table></figure><h2 id="查看历史记录"><a href="#查看历史记录" class="headerlink" title="查看历史记录"></a>查看历史记录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>多屏显示控制方式：<br>    <code>space</code>向下翻页，<br>    <code>b</code> 向上翻页，<br>    <code>q</code> 退出。</p><p>其他查看历史的方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一行显示</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=oneline</span><br><span class="line"><span class="comment"># 一行显示，省略部分id</span></span><br><span class="line">git <span class="built_in">log</span> --oneline</span><br><span class="line"><span class="comment"># HEAD@&#123;移动到当前版本需要多少步&#125;</span></span><br><span class="line">git reflog</span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h2 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h2><h3 id="基于索引值操作-推荐"><a href="#基于索引值操作-推荐" class="headerlink" title="基于索引值操作[推荐]"></a>基于索引值操作[推荐]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard [局部索引值]</span><br></pre></td></tr></table></figure><h3 id="使用-符号：只能后退"><a href="#使用-符号：只能后退" class="headerlink" title="使用^符号：只能后退"></a>使用^符号：只能后退</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure><p>注：一个^表示后退一步，n 个表示后退 n 步。</p><h3 id="使用-符号：只能后退-1"><a href="#使用-符号：只能后退-1" class="headerlink" title="使用~符号：只能后退"></a>使用~符号：只能后退</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD~n</span><br></pre></td></tr></table></figure><p>注：表示后退 n 步。</p><h3 id="reset命令三个参数对比"><a href="#reset命令三个参数对比" class="headerlink" title="reset命令三个参数对比"></a>reset命令三个参数对比</h3><p><code>--soft</code>： 仅仅在本地库移动 HEAD 指针。</p><p><code>--mixed</code>： 在本地库移动 HEAD 指针，重置暂存区。</p><p><code>--hard</code>： 在本地库移动 HEAD 指针，重置暂存区，重置工作区。</p><h2 id="比较文件差异"><a href="#比较文件差异" class="headerlink" title="比较文件差异"></a>比较文件差异</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将工作区中的文件和暂存区进行比较</span></span><br><span class="line">git diff [文件名]</span><br><span class="line"><span class="comment"># 将工作区中的文件和本地库历史记录比较</span></span><br><span class="line">git diff [本地库中历史版本] [文件名]</span><br></pre></td></tr></table></figure><p>不带文件名比较多个文件。</p><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><h3 id="查看所有分支"><a href="#查看所有分支" class="headerlink" title="查看所有分支"></a>查看所有分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">git branch -v </span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个分支，但依然停留在当前分支</span></span><br><span class="line">git branch [分支名]</span><br><span class="line"><span class="comment"># 创建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b [branch]</span><br></pre></td></tr></table></figure><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout [分支名]</span><br></pre></td></tr></table></figure><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><p>第一步：切换到接受修改的分支（被合并，增加新内容）上，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout [被合并分支名]</span><br></pre></td></tr></table></figure><p>第二步：执行 merge 命令，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge [有新内容分支名]</span><br></pre></td></tr></table></figure><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><h3 id="查看所有远程仓库"><a href="#查看所有远程仓库" class="headerlink" title="查看所有远程仓库"></a>查看所有远程仓库</h3><p>查看当前所有远程地址别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add [别名] [远程地址]</span><br></pre></td></tr></table></figure><h3 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push [别名] [分支名]</span><br></pre></td></tr></table></figure><h3 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> [远程地址]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文记录一些在开发上常用的Git命令。&lt;/p&gt;
&lt;h2 id=&quot;git查看命令帮助文档&quot;&gt;&lt;a href=&quot;#git查看命令帮助文档&quot; class=&quot;headerlink&quot; title=&quot;git查看命令帮助文档&quot;&gt;&lt;/a&gt;git查看命令帮助文档&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt; [命令]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;本地库初始化&quot;&gt;&lt;a href=&quot;#本地库初始化&quot; class=&quot;headerlink&quot; title=&quot;本地库初始化&quot;&gt;&lt;/a&gt;本地库初始化&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在本目录下创建一个Git仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建一个目录，并将它初始化成Git代码库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init [project-name]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行该命令后会在当前文件夹内生成一个.git 目录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：.git 目录中存放的是本地库相关的子目录和文件，不要删除，也不要胡乱修改。&lt;/p&gt;
&lt;h2 id=&quot;设置签名信息&quot;&gt;&lt;a href=&quot;#设置签名信息&quot; class=&quot;headerlink&quot; title=&quot;设置签名信息&quot;&gt;&lt;/a&gt;设置签名信息&lt;/h2&gt;&lt;h3 id=&quot;项目-仓库级别签名&quot;&gt;&lt;a href=&quot;#项目-仓库级别签名&quot; class=&quot;headerlink&quot; title=&quot;项目/仓库级别签名&quot;&gt;&lt;/a&gt;项目/仓库级别签名&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config user.name user_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config user.email user_email&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Git" scheme="https://Ethan-jx.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://Ethan-jx.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>SSH端口转发总结</title>
    <link href="https://Ethan-jx.github.io/2018/2018-09-01-SSH%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E6%80%BB%E7%BB%93/"/>
    <id>https://Ethan-jx.github.io/2018/2018-09-01-SSH端口转发总结/</id>
    <published>2018-09-01T12:35:30.000Z</published>
    <updated>2019-03-27T06:15:49.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在前阵子的一次项目部署中，我发现运维小哥哥直接输入了<strong>另外一个内网</strong>的地址就能直接访问到系统，这令我十分诧异，在运维小哥哥的解释下，我才知道了这是通过 <code>SSH隧道</code> + <code>chrome插件 SwitchyOmega</code> 实现的。而 <code>SSH隧道</code> 也可以叫做 <code>SSH的端口转发</code> 。</p><h2 id="SSH端口转发"><a href="#SSH端口转发" class="headerlink" title="SSH端口转发"></a>SSH端口转发</h2><p>SSH端口转发分为三种情况，分别为：本地转发、远程转发和动态转发。</p><h2 id="本地转发"><a href="#本地转发" class="headerlink" title="本地转发"></a>本地转发</h2><p>本地转发是将SSH客户端的一个端口（未使用的）映射到SSH服务器能访问到的一个端口（提供服务的）上，实现访问SSH客户端端口间接访问SSH服务器能访问到的服务。</p><h3 id="使用场景例子"><a href="#使用场景例子" class="headerlink" title="使用场景例子"></a>使用场景例子</h3><a id="more"></a><p><img src="/2018/2018-09-01-SSH端口转发总结/local-forwarding.jpg" alt="本地转发例子"></p><p>在开发者电脑上没有装 MySql 服务，而远程服务器存在一个 MySql 服务器，开发者电脑无法和远程服务器直接通信，但是他们都可以和跳板机通信，此时可以通过SSH端口转发实现开发者电脑电脑访问到内网的 MySql 服务器。</p><p>在开发者电脑中执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L 3306:192.168.0.2:3306 root@123.0.0.1</span><br></pre></td></tr></table></figure><p>这样，开发者电脑就可以通过 MySql 客户端使用 localhost:3306 远程 MySql 服务器了。而且在开发者电脑和内网跳板机之间传输的数据是经过SSH隧道加密的。</p><h3 id="本地端口转发命令"><a href="#本地端口转发命令" class="headerlink" title="本地端口转发命令"></a>本地端口转发命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [-C] [-g] [-f -N] -L [client_ip:]client_port:app_ip:app_port server_user@server_ip</span><br></pre></td></tr></table></figure><p><code>client_ip</code> ：SSH客户端ip，可以省略，省略时只监听回环地址 <code>127.0.0.1</code> 的端口，其他主机不能通过访问SSH客户端主机IP进行隧道服务。</p><p><code>client_port</code>  ：SSH客户端的端口，一般为本机端口。</p><p><code>app_ip</code>  ：SSH服务器能访问到的主机ip。</p><p><code>app_port</code>  ：SSH服务器能访问到的主机端口。</p><p><code>server_user</code>  ：SSH服务器的账号。</p><p><code>server_ip</code> ： SSH服务器的ip。</p><p><code>-f</code> ：后台运行，和 <code>-N</code> 一起使用。</p><p><code>-N</code> ：不打开远程shell主机，可以单独使用，单独使用时，关闭SSH会话也会关闭隧道；只有和 <code>-f</code> 一起使用时才可实现关闭SSH会话继续使用隧道。</p><p><code>-g</code> ： 将本机所有的ip都被监听。</p><p><code>-C</code> ： 压缩数据传输。</p><h2 id="远程转发"><a href="#远程转发" class="headerlink" title="远程转发"></a>远程转发</h2><p>远程转发是将SSH服务器的一个端口上（未使用的）端口映射到SSH客户端能访问到的主机（提供服务的）端口上，实现访问服务SSH服务器的端口实现访问SSH客户端上能访问到的服务。</p><h3 id="使用场景例子-1"><a href="#使用场景例子-1" class="headerlink" title="使用场景例子"></a>使用场景例子</h3><p><img src="/2018/2018-09-01-SSH端口转发总结/remote-forwarding.jpg" alt="远程转发例子"></p><p>在内网中，主机2（192.168.0.2）在内网中在80端口提供http服务，内网主机可以访问到公网主机，但是公网主机无法访问到内网中，我们可以通过内网的一台主机（192.128.0.1）SSH登陆公网主机（123.0.0.1），构建一条远程端口转发隧道，实现公网主机访问到内网的http服务。</p><p>在内网主机（192.128.0.1）上执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -R 80:192.168.0.2:80 root@123.0.0.1</span><br></pre></td></tr></table></figure><p>这样，公网主机（123.0.0.1）就可以直接通过 <a href="http://127.0.0.1:80" target="_blank" rel="noopener">http://127.0.0.1:80</a> 访问内网主机（192.128.0.2）上的http服务了。</p><h3 id="远程端口转发命令"><a href="#远程端口转发命令" class="headerlink" title="远程端口转发命令"></a>远程端口转发命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [-C] [-f -N] -R server_port:app_ip:app_port server_user@server_ip</span><br></pre></td></tr></table></figure><p><code>server_port</code> ：SSH服务器端口（没有被使用的）。</p><p><code>app_ip</code>  ：SSH客户端能访问到的主机ip。</p><p><code>app_port</code>  ：SSH客户端能访问到的主机端口。</p><p><code>server_user</code>  ：SSH服务器的账号。</p><p><code>server_ip</code> ： SSH服务器的ip。</p><p><code>-f</code> ：后台运行，和 <code>-N</code> 一起使用。</p><p><code>-N</code> ：不打开远程shell主机，可以单独使用，单独使用时，关闭SSH会话也会关闭隧道；只有和 <code>-f</code> 一起使用时才可实现关闭SSH会话继续使用隧道。</p><p><code>-C</code> ： 压缩数据传输。</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>远程端口转发使用 <code>-g</code> 参数也是没有效果的，只有SSH服务器通过 <code>127.0.0.1+端口</code> 能访问内网服务。除非修改 <code>/etc/ssh/sshd_config</code> 文件内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">GatewayPorts</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>这个参数的意思是，SSH 隧道监听的服务的 IP 是对外开放的 0.0.0.0，而不是只对本机的 127.0.0.1。</p><p>修改好配置文件后，你还需要重启 sshd 服务来加载新的配置，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h2 id="动态转发"><a href="#动态转发" class="headerlink" title="动态转发"></a>动态转发</h2><p>动态转发可以理解为将SSH服务器变成一个代理服务器。动态转发可以解决内网多个服务，需要为每个端口分别创建本地端口转发的问题。</p><h3 id="使用场景例子-2"><a href="#使用场景例子-2" class="headerlink" title="使用场景例子"></a>使用场景例子</h3><p><img src="/2018/2018-09-01-SSH端口转发总结/dynamic-forwarding.jpg" alt="本地转发例子"></p><p>这个例子就是模拟运维小哥哥直接输入了<strong>另外一个内网</strong>的地址就能直接访问到系统，这个网络环境其实是一开是本地转发的环境，假设在内网服务器（192.68.0.2）的主机上80端口提供 HTTP 服务。</p><p>在开发者电脑中执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -D 1080 root@123.0.0.1</span><br></pre></td></tr></table></figure><p>这样，开发者电脑就开启了一个代理。配置chrome的 SwitchyOmega 插件如下：</p><p><img src="/2018/2018-09-01-SSH端口转发总结/SwitchyOmega.jpg" alt="SwitchyOmega配置"></p><p>选中该代理，即可通过 <a href="http://192.168.0.2:80" target="_blank" rel="noopener">http://192.168.0.2:80</a> 服务远程内网服务了。</p><h3 id="动态转发命令"><a href="#动态转发命令" class="headerlink" title="动态转发命令"></a>动态转发命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -C -f -N -g -D local_port server_user@server_ip</span><br></pre></td></tr></table></figure><p><code>local_port</code> ：本地端口。</p><p><code>server_user</code>  ：SSH服务器的账号。</p><p><code>server_ip</code> ： SSH服务器的ip。</p><p><code>-f</code> ：后台运行，和 <code>-N</code> 一起使用。</p><p><code>-N</code> ：不打开远程shell主机，可以单独使用，单独使用时，关闭SSH会话也会关闭隧道；只有和 <code>-f</code> 一起使用时才可实现关闭SSH会话继续使用隧道。</p><p><code>-g</code> ： 将本机所有的ip都被监听。</p><p><code>-C</code> ： 压缩数据传输。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li><a href="https://blog.fundebug.com/2017/04/24/ssh-port-forwarding/" target="_blank" rel="noopener">玩转SSH端口转发</a></li><li><a href="http://www.zsythink.net/archives/2450" target="_blank" rel="noopener">ssh端口转发：ssh隧道</a></li><li><a href="http://blog.creke.net/722.html" target="_blank" rel="noopener">SSH隧道与端口转发及内网穿透</a></li><li><a href="https://segmentfault.com/a/1190000011846777" target="_blank" rel="noopener">调试利器-SSH隧道</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在前阵子的一次项目部署中，我发现运维小哥哥直接输入了&lt;strong&gt;另外一个内网&lt;/strong&gt;的地址就能直接访问到系统，这令我十分诧异，在运维小哥哥的解释下，我才知道了这是通过 &lt;code&gt;SSH隧道&lt;/code&gt; + &lt;code&gt;chrome插件 SwitchyOmega&lt;/code&gt; 实现的。而 &lt;code&gt;SSH隧道&lt;/code&gt; 也可以叫做 &lt;code&gt;SSH的端口转发&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;SSH端口转发&quot;&gt;&lt;a href=&quot;#SSH端口转发&quot; class=&quot;headerlink&quot; title=&quot;SSH端口转发&quot;&gt;&lt;/a&gt;SSH端口转发&lt;/h2&gt;&lt;p&gt;SSH端口转发分为三种情况，分别为：本地转发、远程转发和动态转发。&lt;/p&gt;
&lt;h2 id=&quot;本地转发&quot;&gt;&lt;a href=&quot;#本地转发&quot; class=&quot;headerlink&quot; title=&quot;本地转发&quot;&gt;&lt;/a&gt;本地转发&lt;/h2&gt;&lt;p&gt;本地转发是将SSH客户端的一个端口（未使用的）映射到SSH服务器能访问到的一个端口（提供服务的）上，实现访问SSH客户端端口间接访问SSH服务器能访问到的服务。&lt;/p&gt;
&lt;h3 id=&quot;使用场景例子&quot;&gt;&lt;a href=&quot;#使用场景例子&quot; class=&quot;headerlink&quot; title=&quot;使用场景例子&quot;&gt;&lt;/a&gt;使用场景例子&lt;/h3&gt;
    
    </summary>
    
      <category term="SSH" scheme="https://Ethan-jx.github.io/categories/SSH/"/>
    
    
      <category term="Socks" scheme="https://Ethan-jx.github.io/tags/Socks/"/>
    
      <category term="SSH" scheme="https://Ethan-jx.github.io/tags/SSH/"/>
    
      <category term="隧道" scheme="https://Ethan-jx.github.io/tags/%E9%9A%A7%E9%81%93/"/>
    
      <category term="端口转发" scheme="https://Ethan-jx.github.io/tags/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    
      <category term="内网穿透" scheme="https://Ethan-jx.github.io/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客Next主题配置记录</title>
    <link href="https://Ethan-jx.github.io/2018/2018-08-26-Hexo%E5%8D%9A%E5%AE%A2Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
    <id>https://Ethan-jx.github.io/2018/2018-08-26-Hexo博客Next主题配置记录/</id>
    <published>2018-08-26T08:55:18.000Z</published>
    <updated>2019-03-27T06:15:49.071Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于网上有很多 <code>Next</code> 主题 <code>v6.0</code> 之前版本的各种功能配置教程（需要修改主题原文件），但是很多功能在 <code>v6.0</code> 之后就直接被集成到 <code>Next</code> 主题中了（只需要通过修改配置），本文记录了本博客的 <code>Next</code> 主题的配置过程 ，为有兴趣搭建的朋友们提供参考。</p><h2 id="Next配置"><a href="#Next配置" class="headerlink" title="Next配置"></a>Next配置</h2><p><strong>注意：</strong>在你站点的 <code>hexo/source/_data</code> 目录创建一个 <code>next.yml</code> 文件，用于覆盖Next主题目录下的 <code>_config.yml</code> 配置。这样做的好处在于：没有修改默认配置，以后主题升级更新更加方便。</p><h3 id="设置Next展示Scheme"><a href="#设置Next展示Scheme" class="headerlink" title="设置Next展示Scheme"></a>设置Next展示Scheme</h3><p>NexT 支持三种 Scheme，他们是：</p><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><p>在文件 <code>next.yml</code> 中添加如下内容：</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment"># 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment"># Muse 的紧凑版本，整洁有序的单栏外观</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment"># 双栏 Scheme，小家碧玉似的清新</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure><h3 id="设置-菜单"><a href="#设置-菜单" class="headerlink" title="设置 菜单"></a>设置 菜单</h3><p>设定菜单内容，对应的字段是 <code>menu</code>。 设置展示分类页  、标签页 和关于页面 。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment"># 归档</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment"># 分类</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="comment"># 标签</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="comment"># 关于</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="comment"># 日程表</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment"># 站点地图</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment"># 公益404</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><h4 id="添加分类页页面："><a href="#添加分类页页面：" class="headerlink" title="添加分类页页面："></a>添加分类页页面：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>编辑刚新建的页面，将页面的 <code>type</code> 设置为 <code>categories</code> ，主题将自动为这个页面显示分类。页面内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-08</span><span class="bullet">-19</span> <span class="number">22</span><span class="string">:55:29</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h4 id="添加标签页页面："><a href="#添加标签页页面：" class="headerlink" title="添加标签页页面："></a>添加标签页页面：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>编辑刚新建的页面，将页面的 <code>type</code> 设置为  <code>tags</code> ，主题将自动为这个页面显示标签云。页面内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-08</span><span class="bullet">-19</span> <span class="number">22</span><span class="string">:55:41</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h4 id="设置新建文章模板带有分类、标签"><a href="#设置新建文章模板带有分类、标签" class="headerlink" title="设置新建文章模板带有分类、标签"></a>设置新建文章模板带有分类、标签</h4><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件。</p><p>修改 Hexo 目录下的 <code>scaffolds\post.md</code> 文件：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories: xxx</span><br><span class="line">tags:</span><br><span class="line">  - aaa</span><br><span class="line">  - bbb</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="安装静态资源插件"><a href="#安装静态资源插件" class="headerlink" title="安装静态资源插件"></a>安装静态资源插件</h3><p>由于七牛云的测试域名被收回，导致托管于七牛云的图片都无法访问，迫不得已只能将图片也托管到 Github 中。安装 <code>hexo-asset-image</code> 插件，可以解决博文中图片路径不正确的问题。使用以下命令安装 <code>hexo-asset-image</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p> 修改字段 <code>avatar</code>， 值设置成头像的链接地址。其中，头像的链接地址可以是：</p><table><thead><tr><th>地址</th><th>值</th></tr></thead><tbody><tr><td>完整的互联网 URI</td><td><code>http://example.com/avatar.png</code></td></tr><tr><td>站点内的地址</td><td>将头像放置主题目录下的 <code>source/uploads/</code> （新建 uploads 目录若不存在）  配置为：<code>avatar: /uploads/avatar.png</code>或者 放置在 <code>source/images/</code> 目录下  配置为：<code>avatar: /images/avatar.png</code></td></tr></tbody></table><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line">  <span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line">  <span class="comment"># You can also use other linking images.</span></span><br><span class="line"><span class="attr">  url:</span> <span class="string">/images/avatar.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be dispalyed in circle.</span></span><br><span class="line"><span class="attr">  rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be rotated with the cursor.</span></span><br><span class="line"><span class="attr">  rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line"><span class="attr">  small:</span> <span class="string">/images/avatar.ico</span></span><br><span class="line"><span class="attr">  medium:</span> <span class="string">/images/avatar.ico</span></span><br><span class="line"><span class="attr">  apple_touch_icon:</span> <span class="string">/images/avatar.ico</span></span><br><span class="line"><span class="attr">  safari_pinned_tab:</span> <span class="string">/images/avatar.ico</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/icon.jpg" alt="icon"></p><h3 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h3><p>NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 <code>normal</code> 主题，可选的值有 <code>normal</code>，<code>night</code>， <code>night blue</code>， <code>night bright</code>， <code>night eighties</code>：</p><table><thead><tr><th style="text-align:center">normal</th><th style="text-align:center">night</th><th style="text-align:center">night blue</th><th style="text-align:center">night bright</th><th style="text-align:center">night eighties</th></tr></thead><tbody><tr><td style="text-align:center"><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/tomorrow.png" alt="tomorrow"></td><td style="text-align:center"><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/tomorrow-night.png" alt="tomorrow-night"></td><td style="text-align:center"><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/tomorrow-night-blue.png" alt="tomorrow-night-blue"></td><td style="text-align:center"><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/tomorrow-night-bright.png" alt="tomorrow-night-bright"></td><td style="text-align:center"><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/tomorrow-night-eighties.png" alt="tomorrow-night-eighties"></td></tr></tbody></table><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Code Highlight theme</span></span><br><span class="line"><span class="comment"># Available values: normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">night</span> <span class="string">eighties</span></span><br></pre></td></tr></table></figure><h3 id="设置侧边栏社交链接"><a href="#设置侧边栏社交链接" class="headerlink" title="设置侧边栏社交链接"></a>设置侧边栏社交链接</h3><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。</p><p>链接放置在 <code>social</code> 字段下，一行一个链接。</p><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links.</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target permalink.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/EthanJX</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  icons_only:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  transition:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="设置打赏功能"><a href="#设置打赏功能" class="headerlink" title="设置打赏功能"></a>设置打赏功能</h3><p>只需要在文件 <code>next.yml</code> 中添加填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reward</span></span><br><span class="line"><span class="attr">reward_comment:</span> <span class="string">如果喜欢,</span> <span class="string">请给我加个🍗~</span></span><br><span class="line"><span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br></pre></td></tr></table></figure><h3 id="设置友情链接"><a href="#设置友情链接" class="headerlink" title="设置友情链接"></a>设置友情链接</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line"><span class="attr">links_icon:</span> <span class="string">link</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">友情链接</span></span><br><span class="line"><span class="attr">links_layout:</span> <span class="string">block</span></span><br><span class="line"><span class="comment">#links_layout: inline</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="string">某某博客:</span> <span class="attr">http://example.com/</span></span><br></pre></td></tr></table></figure><h3 id="设置RSS"><a href="#设置RSS" class="headerlink" title="设置RSS"></a>设置RSS</h3><p>使用以下命令安装 hexo-generator-feed：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>保持<code>_config.yml</code> 文件中 <code>rrs</code> 的内容为空即可，效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/rrs.jpg" alt="rrs"></p><h3 id="设置博客页脚"><a href="#设置博客页脚" class="headerlink" title="设置博客页脚"></a>设置博客页脚</h3><h4 id="设置站点建立时间"><a href="#设置站点建立时间" class="headerlink" title="设置站点建立时间"></a>设置站点建立时间</h4><p>这个时间将在站点的底部显示，例如 <code>© 2013 - 2015</code>。在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup.</span></span><br><span class="line">  <span class="comment"># If not defined, current year will be used.</span></span><br><span class="line"><span class="attr">  since:</span> <span class="number">2018</span></span><br></pre></td></tr></table></figure><h4 id="设置页脚展示icon"><a href="#设置页脚展示icon" class="headerlink" title="设置页脚展示icon"></a>设置页脚展示icon</h4><p>默认情况下，页脚展示情况如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/footer.jpg" alt="页脚"></p><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup.</span></span><br><span class="line">  <span class="comment"># If not defined, current year will be used.</span></span><br><span class="line"><span class="attr">  since:</span> <span class="number">2018</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line"><span class="attr">  icon:</span></span><br><span class="line">    <span class="comment"># Icon name in fontawesome, see: https://fontawesome.com/v4.7.0/icons</span></span><br><span class="line">    <span class="comment"># `heart` is recommended with animation in red (#ff0000).</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">heart</span></span><br><span class="line">    <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line"><span class="attr">    animated:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line"><span class="attr">    color:</span> <span class="string">"#FF0000"</span></span><br></pre></td></tr></table></figure><h4 id="隐藏Hexo、Next相关信息"><a href="#隐藏Hexo、Next相关信息" class="headerlink" title="隐藏Hexo、Next相关信息"></a>隐藏Hexo、Next相关信息</h4><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">powered:</span></span><br><span class="line">  <span class="comment"># Hexo link (Powered by Hexo).</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Version info of Hexo after Hexo link (vX.X.X).</span></span><br><span class="line"><span class="attr">  version:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">theme:</span></span><br><span class="line">  <span class="comment"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line"><span class="attr">  version:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="设置右上角Follow-me-on-GitHub"><a href="#设置右上角Follow-me-on-GitHub" class="headerlink" title="设置右上角Follow me on GitHub"></a>设置右上角Follow me on GitHub</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Follow me on GitHub banner in right-top corner.</span></span><br><span class="line"><span class="comment"># Usage: `permalink || title`</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target permalink.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the title and aria-label name.</span></span><br><span class="line"><span class="attr">github_banner:</span> <span class="attr">https://github.com/EthanJX</span> <span class="string">||</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/banner.jpg" alt="Follow me on GitHub"></p><h3 id="设置CC协议"><a href="#设置CC协议" class="headerlink" title="设置CC协议"></a>设置CC协议</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># http://creativecommons.org/</span></span><br><span class="line"><span class="comment"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment">#creative_commons: by-nc-sa</span></span><br><span class="line"><span class="attr">creative_commons:</span> <span class="string">by-nc-sa</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/cc.jpg" alt="cc"></p><h3 id="设置侧边文章目录展示"><a href="#设置侧边文章目录展示" class="headerlink" title="设置侧边文章目录展示"></a>设置侧边文章目录展示</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Table Of Contents in the Sidebar</span></span><br><span class="line"><span class="comment"># 文章目录</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="comment"># 自动添加序号</span></span><br><span class="line"><span class="attr">  number:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="comment"># 设置false，如果文件小标题太长，会导致滚动条</span></span><br><span class="line"><span class="attr">  wrap:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/toc.jpg" alt="toc"></p><h3 id="设置侧边栏"><a href="#设置侧边栏" class="headerlink" title="设置侧边栏"></a>设置侧边栏</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="comment"># 显示滚动条百分比</span></span><br><span class="line"><span class="attr">  scrollpercent:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Enable sidebar on narrow view (only for Muse | Mist).</span></span><br><span class="line">  <span class="comment"># 窄屏显示</span></span><br><span class="line"><span class="attr">  onmobile:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/sidebar.jpg" alt="sidebar"></p><h3 id="设置阅读全文不自动滚动"><a href="#设置阅读全文不自动滚动" class="headerlink" title="设置阅读全文不自动滚动"></a>设置阅读全文不自动滚动</h3><p>默认情况下，点击阅读全文链接后，会自动滚动到阅读全文之后的内容。在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></span><br><span class="line"><span class="attr">scroll_to_more:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>禁止该效果。</p><h3 id="设置文章元数据展示"><a href="#设置文章元数据展示" class="headerlink" title="设置文章元数据展示"></a>设置文章元数据展示</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  updated_at:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># If true, show updated date label only if `updated date` different from 'created date' (post edited in another day than was created).</span></span><br><span class="line">    <span class="comment"># And if post will edited in same day as created, edited time will show in popup title under created time label.</span></span><br><span class="line">    <span class="comment"># If false show anyway, but if post edited in same day, show only edited time.</span></span><br><span class="line"><span class="attr">    another_day:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/post_meta.jpg" alt="post_meta"></p><h3 id="设置字数统计和阅读时长"><a href="#设置字数统计和阅读时长" class="headerlink" title="设置字数统计和阅读时长"></a>设置字数统计和阅读时长</h3><p>使用以下命令安装 hexo-symbols-count-time：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><p>在<code>Hexo</code> 目录下的 <code>_config.xml</code> 文件中添加如下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 页脚底部是否显示全站统计信息</span></span><br><span class="line"><span class="attr">  total_symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_time:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="comment"># 是否和创建时间、分类分割</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  item_text_post:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  item_text_total:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  awl:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">  wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/item_text_post.jpg" alt="字数统计和阅读时长"></p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/item_text_total.jpg" alt="总字数统计和阅读时长"></p><h3 id="设置代码块copy功能"><a href="#设置代码块copy功能" class="headerlink" title="设置代码块copy功能"></a>设置代码块copy功能</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Manual define the border radius in codeblock</span></span><br><span class="line">  <span class="comment"># Leave it empty for the default 1</span></span><br><span class="line"><span class="attr">  border_radius:</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line"><span class="attr">  copy_button:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result</span></span><br><span class="line"><span class="attr">    show_result:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="设置微信账号"><a href="#设置微信账号" class="headerlink" title="设置微信账号"></a>设置微信账号</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Wechat Subscriber</span></span><br><span class="line"><span class="attr">wechat_subscriber:</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  qcode:</span> <span class="string">/path/to/your/wechatqcode</span> <span class="string">ex.</span> <span class="string">/uploads/wechat-qcode.jpg</span></span><br><span class="line"><span class="attr">  description:</span> <span class="string">ex.</span> <span class="string">subscribe</span> <span class="string">to</span> <span class="string">my</span> <span class="string">blog</span> <span class="string">by</span> <span class="string">scanning</span> <span class="string">my</span> <span class="string">public</span> <span class="string">wechat</span> <span class="string">account</span></span><br></pre></td></tr></table></figure><h3 id="设置文章版权信息"><a href="#设置文章版权信息" class="headerlink" title="设置文章版权信息"></a>设置文章版权信息</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  license:</span> <span class="string">&lt;a</span> <span class="string">href="https://creativecommons.org/licenses/by-nc-sa/4.0/"</span> <span class="string">rel="external</span> <span class="string">nofollow"</span> <span class="string">target="_blank"&gt;CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span><span class="string">&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/copyright.jpg" alt="文章版权"></p><h3 id="设置网站访问量统计"><a href="#设置网站访问量统计" class="headerlink" title="设置网站访问量统计"></a>设置网站访问量统计</h3><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show Views/Visitors of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  total_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_views_icon:</span> <span class="string">eye</span></span><br><span class="line"><span class="attr">  post_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/read_all.jpg" alt="网站访问统计"></p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/read_post.jpg" alt="文章访问统计"></p><h3 id="设置站内搜索"><a href="#设置站内搜索" class="headerlink" title="设置站内搜索"></a>设置站内搜索</h3><p>使用以下命令安装 hexo-generator-searchdb：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># unescape html strings to the readable one</span></span><br><span class="line"><span class="attr">  unescape:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/search.jpg" alt="搜索"></p><h3 id="设置点击出现桃心效果"><a href="#设置点击出现桃心效果" class="headerlink" title="设置点击出现桃心效果"></a>设置点击出现桃心效果</h3><p>复制以下代码，保存为 <code>love.js</code> 文件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>方式一：将 <code>love.js</code> 存放于提供外链的云盘中；</p><p>方式二：将 <code>love.js</code> 放到路径<code>/themes/next/source/js/src</code>里面。</p><p>在文件 <code>next.yml</code> 中的 <code>footer</code> 添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line"><span class="attr">  custom_text:</span> <span class="string">&lt;script</span> <span class="string">type="text/javascript"</span> <span class="string">src="/js/src/love.js"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/love.jpg" alt="love"></p><h3 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h3><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><p>效果如下：</p><p><img src="/2018/2018-08-26-Hexo博客Next主题配置记录/tag_icon.jpg" alt="tag icon"></p><h3 id="设置自定义样式"><a href="#设置自定义样式" class="headerlink" title="设置自定义样式"></a>设置自定义样式</h3><p><strong>注意：</strong>在你站点的<code>hexo/source/_data</code>目录创建一个<code>styles.styl</code>文件，用于自定义<code>CSS</code>样式。</p><p>在文件 <code>next.yml</code> 中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line"><span class="attr">  styles:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure><p>这样就将默认的自定义样式文件从主题目录下的 <code>source/css/_custom/custom.styl</code> 改成了站点目录下的 <code>source/_data/styles.styl</code> ，这样的优势在于：没有修改主题默认配置，以后主题升级更新更加方便。</p><p>在文件 <code>styles.styl</code> 中添加如下内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">50px</span> <span class="number">25px</span>;</span><br><span class="line"><span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">#888</span>;</span><br><span class="line"><span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">#888</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 更好的侧边滚动条</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span><span class="selector-pseudo">:start</span><span class="selector-pseudo">:increment</span>,<span class="selector-pseudo">::-webkit-scrollbar-button</span><span class="selector-pseudo">:end</span><span class="selector-pseudo">:decrement</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-corner</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0,0,0,.2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0,0,0,.5);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-track</span>,<span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-track</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0,0,0,.15);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span><span class="selector-pseudo">:start</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span><span class="selector-pseudo">:end</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于网上有很多 &lt;code&gt;Next&lt;/code&gt; 主题 &lt;code&gt;v6.0&lt;/code&gt; 之前版本的各种功能配置教程（需要修改主题原文件），但是很多功能在 &lt;code&gt;v6.0&lt;/code&gt; 之后就直接被集成到 &lt;code&gt;Next&lt;/code&gt; 主题中了（只需要通过修改配置），本文记录了本博客的 &lt;code&gt;Next&lt;/code&gt; 主题的配置过程 ，为有兴趣搭建的朋友们提供参考。&lt;/p&gt;
&lt;h2 id=&quot;Next配置&quot;&gt;&lt;a href=&quot;#Next配置&quot; class=&quot;headerlink&quot; title=&quot;Next配置&quot;&gt;&lt;/a&gt;Next配置&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;在你站点的 &lt;code&gt;hexo/source/_data&lt;/code&gt; 目录创建一个 &lt;code&gt;next.yml&lt;/code&gt; 文件，用于覆盖Next主题目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 配置。这样做的好处在于：没有修改默认配置，以后主题升级更新更加方便。&lt;/p&gt;
&lt;h3 id=&quot;设置Next展示Scheme&quot;&gt;&lt;a href=&quot;#设置Next展示Scheme&quot; class=&quot;headerlink&quot; title=&quot;设置Next展示Scheme&quot;&gt;&lt;/a&gt;设置Next展示Scheme&lt;/h3&gt;&lt;p&gt;NexT 支持三种 Scheme，他们是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白&lt;/li&gt;
&lt;li&gt;Mist - Muse 的紧凑版本，整洁有序的单栏外观&lt;/li&gt;
&lt;li&gt;Pisces - 双栏 Scheme，小家碧玉似的清新&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在文件 &lt;code&gt;next.yml&lt;/code&gt; 中添加如下内容：&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://Ethan-jx.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://Ethan-jx.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="https://Ethan-jx.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建记录</title>
    <link href="https://Ethan-jx.github.io/2018/2018-08-19-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>https://Ethan-jx.github.io/2018/2018-08-19-Hexo博客搭建记录/</id>
    <published>2018-08-19T12:39:21.000Z</published>
    <updated>2019-03-27T06:15:49.067Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文记录了本博客的搭建过程，为有兴趣搭建的朋友们提供参考。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>首先，保证电脑已经安装以下软件：</p><ol><li>Node.js</li><li>Git</li></ol><p>然后执行以下npm命令命令完成Hexo的安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="创建一个Hexo博客"><a href="#创建一个Hexo博客" class="headerlink" title="创建一个Hexo博客"></a>创建一个Hexo博客</h2><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下： </p><a id="more"></a><p><img src="/2018/2018-08-19-Hexo博客搭建记录/hexo-directory-structure.jpg" alt="hexo项目目录结构"></p><p>此时可以在指定的文件夹下，通过 <code>hexo server</code> 命令启动本地博客服务，或者使用简写命令 <code>hexo s</code> ，然后可以通过 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 访问博客。</p><p><img src="/2018/2018-08-19-Hexo博客搭建记录/hexo-default-index.jpg" alt="hexo启动访问页面"></p><h2 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。 </p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 _config.yml 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。 </p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>生成静态文件，该命令可以简写为 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p> 发表草稿。 </p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>启动服务器，该命令可以间写为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>默认情况下，访问网址为： <code>http://localhost:4000/</code> 。 </p><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>部署网站。 该命令可以简写为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>参数：</p><p>-g, –generate    部署之前预先生成静态文件</p><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 ( <code>db.json</code> ) 和已生成的静态文件 ( <code>public</code> )。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h2><p>修改 <code>_config.yml</code> 中的配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="comment">## 网站标题</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">剑轩博客</span></span><br><span class="line"><span class="comment">## 网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line"><span class="comment">## 网站描述，用于搜索引擎SEO</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="comment">## 网站关键字，用于搜索引擎SEO</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="comment">## 作者昵称</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">剑轩</span></span><br><span class="line"><span class="comment">## 网站语言，默认英语</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment">## 时区，默认电脑时区</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://ethan-jx.github.io/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="comment">## 文章链接地址格式，即文章存放的目录格式。</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:year-:month-:day-:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="comment">## 资源文件夹，放在里面的文件会上传到github中</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="comment">## 公共文件夹，存放生成的静态文件</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="comment">## 标签文件夹，默认是tags。实际存放在source/tags中</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="comment">## 档案文件夹，默认是archives。</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="comment">## 分类文件夹，默认是categories。实际存放在source/categories中。</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="comment">## 代码文件夹，默认是downloads/code</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="comment">## 国际化文件夹，默认跟language相同</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment">## 不需要渲染的文件夹或文件夹,放在[]中</span></span><br><span class="line"><span class="comment">## 这两个文件是百度和google的站长验证文件，不能渲染，否则会改变内容，不能验证过</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="comment">## 新建博文的默认名称</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="comment">## 默认布局模板是post，而不是draft和page</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="comment">## 是否将标题转换成标题形式（首字母大写）</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="comment">## 在新标签页面中打开网页</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">## 是否渲染草稿</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 启动 Asset 文件夹，创建文章时，并创建一个名字相同的文件夹，用于存放静态文件，如：图片。一般需要安装hexo-asset-image插件</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">## 把链接改为与根目录的相对位址</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 显示未来的文章</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">## 代码块的设置</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">true</span> <span class="comment"># 自动检测语言</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  order_by:</span> <span class="bullet">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="comment">## 分页路径，在public中可以看到</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment"># 主题配置</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment"># 部署配置</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span></span><br></pre></td></tr></table></figure><h2 id="将博客部署到GitHub-Page"><a href="#将博客部署到GitHub-Page" class="headerlink" title="将博客部署到GitHub Page"></a>将博客部署到GitHub Page</h2><h3 id="创建一个User-Pages的项目"><a href="#创建一个User-Pages的项目" class="headerlink" title="创建一个User Pages的项目"></a>创建一个User Pages的项目</h3><p>在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username是你的账号名)， 比如我的仓库地址为 ethan-jx.github.io 。</p><p><strong>补充</strong></p><p>User Pages 与 Project Pages的区别是：</p><ol><li>User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。</li><li>用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。</li><li>User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。</li><li>User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。</li></ol><h3 id="配置静态博客git部署"><a href="#配置静态博客git部署" class="headerlink" title="配置静态博客git部署"></a>配置静态博客git部署</h3><h4 id="安装git部署插件"><a href="#安装git部署插件" class="headerlink" title="安装git部署插件"></a>安装git部署插件</h4><p>使用以下命令安装 hexo-deployer-git：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="发布配置"><a href="#发布配置" class="headerlink" title="发布配置"></a>发布配置</h4><p>修改 <code>_config.yml</code> 配置。 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/Ethan-JX/ethan-jx.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  message:</span> <span class="string">update</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean<span class="comment">#清楚缓存和已经生成的静态文件</span></span><br><span class="line">$ hexo g<span class="comment">#生成静态文件</span></span><br><span class="line">$ hexo d<span class="comment">#部署</span></span><br></pre></td></tr></table></figure><h2 id="配置Next主题"><a href="#配置Next主题" class="headerlink" title="配置Next主题"></a>配置Next主题</h2><h3 id="下载Next主题"><a href="#下载Next主题" class="headerlink" title="下载Next主题"></a>下载Next主题</h3><p>在终端窗口下，定位到 Hexo 站点目录下。使用 <code>Git</code> checkout 代码： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="设置Next主题"><a href="#设置Next主题" class="headerlink" title="设置Next主题"></a>设置Next主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 <code>theme</code> 字段，并将其值更改为 <code>next</code>。 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>到此，NexT 主题安装完成。 启动Hexo本地站点，发现博客的主页已经变成以下界面：</p><p><img src="/2018/2018-08-19-Hexo博客搭建记录/next-theme-index.jpg" alt="next主题"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文记录了本博客的搭建过程，为有兴趣搭建的朋友们提供参考。&lt;/p&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;p&gt;首先，保证电脑已经安装以下软件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后执行以下npm命令命令完成Hexo的安装：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;创建一个Hexo博客&quot;&gt;&lt;a href=&quot;#创建一个Hexo博客&quot; class=&quot;headerlink&quot; title=&quot;创建一个Hexo博客&quot;&gt;&lt;/a&gt;创建一个Hexo博客&lt;/h2&gt;&lt;p&gt;安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 &lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新建完成后，指定文件夹的目录如下： &lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://Ethan-jx.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://Ethan-jx.github.io/tags/Hexo/"/>
    
      <category term="Git-Page" scheme="https://Ethan-jx.github.io/tags/Git-Page/"/>
    
      <category term="Next" scheme="https://Ethan-jx.github.io/tags/Next/"/>
    
  </entry>
  
</feed>
